#!/bin/bash
#PBS -A wff3_b_g_bc_default
#PBS -l nodes=1:ppn=8
#PBS -l pmem=3gb
#PBS -l walltime=1:00:00
#PBS -j oe
#PBS -o analysis.log
#PBS -N analysis

cd ${PBS_O_WORKDIR}

echo Job analysis has started on $(hostname) at $(date)
module load gcc/5.3.1
module load parallel/20170522
module load python/3.6.3-anaconda5.0.1

# Activate the python_gnu_parallel environment and set up the PATH
source activate python_gnu_parallel
export PATH=${HOME}/work/python_gnu_parallel_test_aci/bin:${PATH}

if [ ! -d ${HOME}/scratch/tmp ]; then
    mkdir -p ${HOME}/scratch/tmp
fi

# Create the fragments in ~/scratch/tmp
fragmentor -i ${HOME}/work/python_gnu_parallel_test_aci/data/data.csv -f 4 -p ~/scratch/tmp/

# Functions to be used with GNU parallel
function analysis_1 () {
    analysis -i $1 -c determine_most_popular_email
}

function analysis_2 () {
    analysis -i $1 -c determine_most_popular_free_email
}

function analysis_3 () {
    analysis -i $1 -c determine_most_popular_document_format
}

function analysis_4 () {
    analysis -i $1 -c determine_most_popular_audio_format
}

function analysis_5 () {
    analysis -i $1 -c determine_most_popular_image_format
}

# Export functions so they can be used by parallel
export -f analysis_1
export -f analysis_2
export -f analysis_3
export -f analysis_4
export -f analysis_5

# Now run the analyses using GNU parallel. Keep in same order. Output to .xml files
cd ${HOME}/scratch/tmp
parallel -k analysis_1 ::: fragment_1.csv fragment_2.csv fragment_3.csv fragment_4.csv >> \
    ./most_popular_email.xml
parallel -k analysis_2 ::: fragment_1.csv fragment_2.csv fragment_3.csv fragment_4.csv >> \
    ./most_popular_free_email.xml
parallel -k analysis_3 ::: fragment_1.csv fragment_2.csv fragment_3.csv fragment_4.csv >> \
    ./most_popular_document_format.xml
parallel -k analysis_4 ::: fragment_1.csv fragment_2.csv fragment_3.csv fragment_4.csv >> \
    ./most_popular_audio_format.xml
parallel -k analysis_5 ::: fragment_1.csv fragment_2.csv fragment_3.csv fragment_4.csv >> \
    ./most_popular_image_format.xml

# Add root element to xml files using echo and tac
# most_popular_email.xml
tac most_popular_email.xml > /tmp/tmp_jcn23.xml && \
    echo '<root>' >> /tmp/tmp_jcn23.xml && \
    tac /tmp/tmp_jcn23.xml > most_popular_email.xml && \
    echo '</root>' >> most_popular_email.xml

# most_popular_free_email.xml
tac most_popular_free_email.xml > /tmp/tmp_jcn23.xml && \
    echo '<root>' >> /tmp/tmp_jcn23.xml && \
    tac /tmp/tmp_jcn23.xml > most_popular_free_email.xml && \
    echo '</root>' >> most_popular_free_email.xml

# most_popular_document_format.xml
tac most_popular_document_format.xml > /tmp/tmp_jcn23.xml && \
    echo '<root>' >> /tmp/tmp_jcn23.xml && \
    tac /tmp/tmp_jcn23.xml > most_popular_document_format.xml && \
    echo '</root>' >> most_popular_document_format.xml

# most_popular_audio_format.xml
tac most_popular_audio_format.xml > /tmp/tmp_jcn23.xml && \
    echo '<root>' >> /tmp/tmp_jcn23.xml && \
    tac /tmp/tmp_jcn23.xml > most_popular_audio_format.xml && \
    echo '</root>' >> most_popular_audio_format.xml

# most_popular_image_format.xml
tac most_popular_image_format.xml > /tmp/tmp_jcn23.xml && \
    echo '<root>' >> /tmp/tmp_jcn23.xml && \
    tac /tmp/tmp_jcn23.xml > most_popular_image_format.xml && \
    echo '</root>' >> most_popular_image_format.xml

# Generate graphs most_popular_email_client_bar_graph.png,
# most_popular_email_client_pie_chart.png
# most_popular_free_email_client_bar_graph.png
# most_popular_free_email_client_pie_chart.png
# most_popular_document_format_bar_graph.png
# most_popular_document_format_pie_chart.png
# most_popular_audio_format_bar_graph.png
# most_popular_audio_format_pie_chart.png
# most_popular_image_format_bar_graph.png
# most_popular_image_format_pie_chart.png
graphgen -f most_popular_email.xml \
    most_popular_free_email.xml \
    most_popular_document_format.xml \
    most_popular_audio_format.xml \
    most_popular_image_format.xml

# Move graphs to an output directory in work
if [ ! -d ${HOME}/work/analysis_output ]; then
    mkdir -p ${HOME}/work/analysis_output
fi

mv most_popular_email_client_bar_graph.png ${HOME}/work/analysis_output
mv most_popular_email_client_pie_chart.png ${HOME}/work/analysis_output
mv most_popular_free_email_client_bar_graph.png ${HOME}/work/analysis_output
mv most_popular_free_email_client_pie_chart.png ${HOME}/work/analysis_output
mv most_popular_document_format_bar_graph.png ${HOME}/work/analysis_output
mv most_popular_document_format_pie_chart.png ${HOME}/work/analysis_output
mv most_popular_audio_format_bar_graph.png ${HOME}/work/analysis_output
mv most_popular_audio_format_pie_chart.png ${HOME}/work/analysis_output
mv most_popular_image_format_bar_graph.png ${HOME}/work/analysis_output
mv most_popular_image_format_pie_chart.png ${HOME}/work/analysis_output

# Change into the work directory and compress analysis_output into
# a shareable zip file
cd ${HOME}/work
zip -r analysis_output.zip analysis_output

echo Job analysis ended at $(date)
